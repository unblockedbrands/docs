{
  "openapi": "3.1.0",
  "info": {
    "title": "Unblocked Wallet Passes API",
    "description": "Unblocked Wallet Passes API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.ubpass.co/v1",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "APIKey": []
    }
  ],
  "tags": [
    {
      "name": "Pique",
      "description": "Access Pique campaign analytics and video performance data"
    },
    {
      "name": "Passport - Passes",
      "description": "Create, update, retrieve, and delete digital wallet passes for Apple and Google platforms"
    },
    {
      "name": "Passport - Push Notifications",
      "description": "Send and manage push notifications to wallet passes"
    },
    {
      "name": "Passport - Locations",
      "description": "Configure location-based triggers and geofencing for wallet passes"
    },
    {
      "name": "Upload APIs",
      "description": "Upload and manage pass assets and images"
    }
  ],
  "paths": {
    "/wallet-pass-location/{locationId}": {
      "get": {
        "tags": [
          "Passport - Locations"
        ],
        "summary": "Get a wallet pass location",
        "description": "Get a wallet pass location by its ID.\n",
        "operationId": "getPassLocation",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          },
          {
            "name": "locationId",
            "in": "path",
            "description": "Unique identifier of the wallet pass location",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved wallet pass location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PassLocation"
                },
                "examples": {
                  "Location Response": {
                    "summary": "Wallet pass location details",
                    "description": "Location Response",
                    "value": {
                      "id": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                      "createdTime": "2025-09-04T21:09:36.027Z",
                      "updatedTime": "2025-09-04T21:11:01.734Z",
                      "createdBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "updatedBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "workspaceId": "1f089d29-6f9c-66c2-af59-99631cec7ab5",
                      "accountId": "1f089d29-6fa8-6a13-af59-99631cec7ab5",
                      "name": "TORONTO MALL LOCATION",
                      "enabled": true,
                      "latitude": 43.798327702071944,
                      "longitude": -79.24175240232819,
                      "relevantText": "Welcome to Toronto Premium Outlets",
                      "walletPass": {
                        "id": "1f07ee39-d750-6276-aff4-07a599527878"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Wallet pass location not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Not Found Error": {
                    "summary": "Location not found",
                    "description": "Not Found Error",
                    "value": {
                      "txId": "1f098fa9-3786-64d4-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:23",
                      "errorCode": "NOT_FOUND",
                      "errorMessage": "Not found.",
                      "context": {
                        "id": "1f083424-11ed-617f-9513-1b26dc975ee2"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Passport - Locations"
        ],
        "summary": "Update a wallet pass location",
        "description": "Update an existing wallet pass location by ID.\n",
        "operationId": "updatePassLocation",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          },
          {
            "name": "locationId",
            "in": "path",
            "description": "Unique identifier of the wallet pass location to update",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          }
        ],
        "requestBody": {
          "description": "Updated wallet pass location data including name, coordinates, and wallet pass reference",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PassLocation"
              },
              "examples": {
                "Update Location Request": {
                  "summary": "Example wallet pass location update request",
                  "description": "Update Location Request",
                  "value": {
                    "name": "TORONTO MALL LOCATION - UPDATED",
                    "enabled": true,
                    "latitude": 43.798327702071944,
                    "longitude": -79.24175240232819,
                    "relevantText": "Welcome to Toronto Premium Outlets - Updated",
                    "walletPass": {
                      "id": "1f07ee39-d750-6276-aff4-07a599527878"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Wallet pass location updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PassLocation"
                },
                "examples": {
                  "Updated Location Response": {
                    "summary": "Successfully updated wallet pass location",
                    "description": "Updated Location Response",
                    "value": {
                      "id": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                      "createdTime": "2025-09-04T21:09:36.027Z",
                      "updatedTime": "2025-09-04T21:15:42.123Z",
                      "createdBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "updatedBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "workspaceId": "1f089d29-6f9c-66c2-af59-99631cec7ab5",
                      "accountId": "1f089d29-6fa8-6a13-af59-99631cec7ab5",
                      "name": "TORONTO MALL LOCATION - UPDATED",
                      "enabled": true,
                      "latitude": 43.798327702071944,
                      "longitude": -79.24175240232819,
                      "relevantText": "Welcome to Toronto Premium Outlets - Updated",
                      "walletPass": {
                        "id": "1f07ee39-d750-6276-aff4-07a599527878"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Invalid input validation error",
                    "description": "Bad Request Error",
                    "value": {
                      "txId": "1f098faa-8f33-6425-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:59",
                      "errorCode": "INVALID_INPUT",
                      "context": {
                        "name": "must not be null"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Wallet pass location not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Not Found Error": {
                    "summary": "Location not found",
                    "description": "Not Found Error",
                    "value": {
                      "txId": "1f098fa9-3786-64d4-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:23",
                      "errorCode": "NOT_FOUND",
                      "errorMessage": "Not found.",
                      "context": {
                        "id": "1f083424-11ed-617f-9513-1b26dc975ee2"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Passport - Locations"
        ],
        "summary": "Delete a wallet pass location",
        "description": "Delete a wallet pass location by ID.\n",
        "operationId": "deletePassLocation",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          },
          {
            "name": "locationId",
            "in": "path",
            "description": "Unique identifier of the wallet pass location to delete",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          }
        ],
        "responses": {
          "204": {
            "description": "Location has been deleted successfully"
          },
          "404": {
            "description": "Not Found - Wallet pass location not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Not Found Error": {
                    "summary": "Location not found",
                    "description": "Not Found Error",
                    "value": {
                      "txId": "1f098fa9-3786-64d4-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:23",
                      "errorCode": "NOT_FOUND",
                      "errorMessage": "Not found.",
                      "context": {
                        "id": "1f083424-11ed-617f-9513-1b26dc975ee2"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallet-pass": {
      "get": {
        "tags": [
          "Passport - Passes"
        ],
        "summary": "Search and filter Wallet Passes",
        "description": "Search and retrieve Wallet Passes with optional filtering and pagination.\n\n**Features:**\n- Search passes by name using keyword query (case-insensitive)\n- Filter by pass status (Draft, Published)\n- Filter by specific pass ID or pass name\n- Pagination support with cursor-based navigation\n- Option to include pass assets (images) in response\n- Option to return summary-only information\n\n**Pagination:**\n- Use `cursor` parameter for next page navigation\n- `limit` controls page size (default: 20, max: 20)\n- Response includes `items` array, `cursor`, and `hasMore` fields\n",
        "operationId": "getPassList",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search keyword to filter passes by name (case-insensitive)",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 255
            },
            "example": "VIP MEMBERSHIP PASS"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor for fetching the next set of results. Use the 'cursor' value from the previous response.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of passes to return per page (1-20, max 20)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1
            },
            "example": 20
          },
          {
            "name": "includePassAssets",
            "in": "query",
            "description": "Include pass asset URLs (images) in the response",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "summary",
            "in": "query",
            "description": "Return only basic pass information (summary mode)",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "Filter by specific pass ID",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          },
          {
            "name": "passName",
            "in": "query",
            "description": "Exact search by pass name (case-sensitive)",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 255
            },
            "example": "VIP MEMBERSHIP PASS"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter passes by status. Multiple values allowed.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Draft",
                  "Published"
                ]
              }
            },
            "example": "Published,Draft"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved wallet passes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BXPagedList"
                },
                "examples": {
                  "Success Response": {
                    "summary": "Paginated list of wallet passes",
                    "description": "Success Response",
                    "value": {
                      "items": [
                        {
                          "id": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                          "createdTime": "2025-09-04T21:09:36.027Z",
                          "updatedTime": "2025-09-04T21:11:01.734Z",
                          "createdBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                          "updatedBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                          "workspaceId": "1f089d29-6f9c-66c2-af59-99631cec7ab5",
                          "accountId": "1f089d29-6fa8-6a13-af59-99631cec7ab5",
                          "notificationHeader": "BLUE PASS",
                          "passName": "VIP MEMBERSHIP PASS",
                          "status": "Published",
                          "passMetadata": {
                            "description": "Exclusive VIP membership pass with premium benefits",
                            "organizationName": "Premium Brands Inc",
                            "backgroundColor": "#4a32A8",
                            "displayTextColor": "#FFFFFF",
                            "topField": {
                              "key": "tabKey",
                              "label": "SEE OFFERS",
                              "value": "Tab (...)"
                            },
                            "secondaryFields": [
                              {
                                "key": "auxiliaryFieldKey",
                                "label": "Member Level",
                                "value": "VIP Gold"
                              },
                              {
                                "key": "auxiliaryFieldKey2",
                                "label": "Expires",
                                "value": "Dec 31, 2025"
                              },
                              {
                                "key": "auxiliaryFieldKey3",
                                "label": "Benefits",
                                "value": "Premium Access"
                              }
                            ],
                            "backFields": [
                              {
                                "key": "featured",
                                "label": "Featured",
                                "value": [
                                  {
                                    "link": "https://premiumbrands.com/",
                                    "text": "Visit Our Website"
                                  }
                                ]
                              },
                              {
                                "key": "connectWithUs",
                                "label": "Connect",
                                "value": [
                                  {
                                    "link": "https://x.com/premiumbrands/",
                                    "text": "X"
                                  },
                                  {
                                    "link": "https://www.instagram.com/premiumbrands/",
                                    "text": "Instagram"
                                  }
                                ],
                                "changeMessage": null
                              },
                              {
                                "key": "dealsFromOurPartner",
                                "label": "Deals from Partners",
                                "value": [
                                  {
                                    "link": "https://unblockedbrands.com",
                                    "text": "Unblocked Brands"
                                  }
                                ]
                              }
                            ],
                            "qrUrl": "https://premiumbrands.com/vip-benefits",
                            "qrText": "Scan for VIP benefits"
                          },
                          "uploadInfoList": [
                            {
                              "fileName": "icon.png",
                              "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789abc"
                            },
                            {
                              "fileName": "logo.png",
                              "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789def"
                            },
                            {
                              "fileName": "strip.png",
                              "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789ghi"
                            }
                          ]
                        }
                      ],
                      "cursor": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                      "hasMore": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Passport - Passes"
        ],
        "summary": "Create a wallet pass",
        "description": "Create a new wallet pass for both Apple and Google platforms.\n",
        "operationId": "createWalletPass",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          }
        ],
        "requestBody": {
          "description": "Wallet pass creation data including metadata, fields, and uploaded asset references",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletPassInfo"
              },
              "examples": {
                "Create Pass Request": {
                  "summary": "Example wallet pass creation request",
                  "description": "Create Pass Request",
                  "value": {
                    "notificationHeader": "BLUE PASS",
                    "passName": "VIP MEMBERSHIP PASS",
                    "passMetadata": {
                      "description": "Exclusive VIP membership pass with premium benefits",
                      "organizationName": "Premium Brands Inc",
                      "backgroundColor": "#4a32A8",
                      "displayTextColor": "#FFFFFF",
                      "topField": {
                        "key": "tabKey",
                        "label": "SEE OFFERS",
                        "value": "Tab (...)"
                      },
                      "secondaryFields": [
                        {
                          "key": "auxiliaryFieldKey",
                          "label": "Member Level",
                          "value": "VIP Gold"
                        },
                        {
                          "key": "auxiliaryFieldKey2",
                          "label": "Expires",
                          "value": "Dec 31, 2025"
                        }
                      ],
                      "backFields": [
                        {
                          "key": "featured",
                          "label": "Featured",
                          "value": [
                            {
                              "link": "https://premiumbrands.com/",
                              "text": "Visit Our Website"
                            }
                          ]
                        },
                        {
                          "key": "connectWithUs",
                          "label": "Connect",
                          "value": [
                            {
                              "link": "https://x.com/premiumbrands/",
                              "text": "X"
                            },
                            {
                              "link": "https://www.instagram.com/premiumbrands/",
                              "text": "Instagram"
                            }
                          ],
                          "changeMessage": null
                        }
                      ],
                      "qrUrl": "https://premiumbrands.com/vip-benefits",
                      "qrText": "Scan for VIP benefits"
                    },
                    "uploadInfoList": [
                      {
                        "fileName": "icon.png",
                        "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789abc"
                      },
                      {
                        "fileName": "logo.png",
                        "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789def"
                      },
                      {
                        "fileName": "strip.png",
                        "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789ghi"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Wallet pass created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletPassInfo"
                },
                "examples": {
                  "Created Pass Response": {
                    "summary": "Successfully created wallet pass",
                    "description": "Created Pass Response",
                    "value": {
                      "id": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                      "createdTime": "2025-09-04T21:09:36.027Z",
                      "updatedTime": "2025-09-04T21:09:36.027Z",
                      "createdBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "updatedBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "workspaceId": "1f089d29-6f9c-66c2-af59-99631cec7ab5",
                      "accountId": "1f089d29-6fa8-6a13-af59-99631cec7ab5",
                      "notificationHeader": "BLUE PASS",
                      "passName": "VIP MEMBERSHIP PASS",
                      "status": "Published",
                      "passMetadata": {
                        "description": "Exclusive VIP membership pass with premium benefits",
                        "organizationName": "Premium Brands Inc",
                        "backgroundColor": "#4a32A8",
                        "displayTextColor": "#FFFFFF",
                        "topField": {
                          "key": "tabKey",
                          "label": "SEE OFFERS",
                          "value": "Tab (...)"
                        },
                        "secondaryFields": [
                          {
                            "key": "auxiliaryFieldKey",
                            "label": "Member Level",
                            "value": "VIP Gold"
                          },
                          {
                            "key": "auxiliaryFieldKey2",
                            "label": "Expires",
                            "value": "Dec 31, 2025"
                          }
                        ],
                        "backFields": [
                          {
                            "key": "featured",
                            "label": "Featured",
                            "value": [
                              {
                                "link": "https://premiumbrands.com/",
                                "text": "Visit Our Website"
                              }
                            ]
                          }
                        ],
                        "qrUrl": "https://premiumbrands.com/vip-benefits",
                        "qrText": "Scan for VIP benefits"
                      },
                      "uploadInfoList": [
                        {
                          "fileName": "icon.png",
                          "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789abc"
                        },
                        {
                          "fileName": "logo.png",
                          "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789def"
                        },
                        {
                          "fileName": "strip.png",
                          "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789ghi"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Invalid input validation error",
                    "description": "Bad Request Error",
                    "value": {
                      "txId": "1f098faa-8f33-6425-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:59",
                      "errorCode": "INVALID_INPUT",
                      "context": {
                        "passName": "must not be null"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallet-pass/notifications": {
      "get": {
        "tags": [
          "Passport - Push Notifications"
        ],
        "summary": "Search and filter wallet pass notifications",
        "description": "Search and retrieve wallet pass notifications with optional filtering and pagination.\n\n**Features:**\n- Search notifications by name using keyword query (case-insensitive)\n- Filter by notification status (Draft, Scheduled, Processing, Published, Failed)\n- Filter by specific wallet pass serial numbers\n- Pagination support with cursor-based navigation\n- Option to include pass template data in response\n- Option to include link click statistics\n\n**Pagination:**\n- Use `cursor` parameter for next page navigation\n- `limit` controls page size (default: 20, max: 20)\n- Response includes `items` array, `cursor`, and `hasMore` fields\n\n**Status Values:**\n- `Draft`: Notification created but not yet ready for delivery\n- `Scheduled`: Notification scheduled for future delivery (processed every 15 minutes)\n- `Processing`: Notification currently being sent or sent immediately upon creation\n- `Published`: Notification successfully delivered to all recipients\n- `Failed`: Notification delivery failed due to errors\n",
        "operationId": "getNotificationList",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search keyword to filter notifications by name (case-insensitive)",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 255
            },
            "example": "VIP Member Update"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor for fetching the next set of results. Use the 'cursor' value from the previous response.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of notifications to return per page (1-20, max 20)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1
            },
            "example": 20
          },
          {
            "name": "passSerialNumber",
            "in": "query",
            "description": "Filter by specific wallet pass serial numbers",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9-_]+$"
              }
            },
            "example": "1f09804f-d6c7-66ec-8db2-27a5651e1de2"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter notifications by status. Multiple values allowed.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Draft",
                  "Scheduled",
                  "Processing",
                  "Published",
                  "Failed"
                ]
              }
            },
            "example": "Published,Scheduled"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved wallet pass notifications",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BXPagedList"
                },
                "examples": {
                  "Success Response": {
                    "summary": "Paginated list of wallet pass notifications",
                    "description": "Success Response",
                    "value": {
                      "items": [
                        {
                          "id": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                          "createdTime": "2025-09-04T21:09:36.027Z",
                          "updatedTime": "2025-09-04T21:11:01.734Z",
                          "createdBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                          "updatedBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                          "workspaceId": "1f089d29-6f9c-66c2-af59-99631cec7ab5",
                          "accountId": "1f089d29-6fa8-6a13-af59-99631cec7ab5",
                          "passSerialNumber": "1f09804f-d6c7-66ec-8db2-27a5651e1de2",
                          "notificationName": "VIP Member Update",
                          "notificationMessage": "Your VIP membership benefits have been updated! Check out the new exclusive offers.",
                          "status": "Published",
                          "scheduledTime": "2025-09-04T10:00:00.000Z",
                          "sentTime": "2025-09-04T10:00:15.123Z"
                        },
                        {
                          "id": "1f089d37-8a1b-4c2d-9e3f-123456789abc",
                          "createdTime": "2025-09-04T20:30:15.456Z",
                          "updatedTime": "2025-09-04T20:30:15.456Z",
                          "createdBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                          "updatedBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                          "workspaceId": "1f089d29-6f9c-66c2-af59-99631cec7ab5",
                          "accountId": "1f089d29-6fa8-6a13-af59-99631cec7ab5",
                          "passSerialNumber": "1f09804f-d6c7-66ec-8db2-27a5651e1de2",
                          "notificationName": "Special Offer Alert",
                          "notificationMessage": "Limited time offer! Get 20% off your next purchase with your VIP membership.",
                          "status": "Scheduled",
                          "scheduledTime": "2025-09-05T14:00:00.000Z",
                          "sentTime": null
                        }
                      ],
                      "cursor": "1f089d37-8a1b-4c2d-9e3f-123456789abc",
                      "hasMore": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Invalid parameter validation error",
                    "description": "Bad Request Error",
                    "value": {
                      "txId": "1f098faa-8f33-6425-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:59",
                      "errorCode": "INVALID_INPUT",
                      "context": {
                        "limit": "must be between 1 and 20"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Passport - Push Notifications"
        ],
        "summary": "Create a notification for a wallet pass",
        "description": "Create a notification for a wallet pass. The notification can be sent immediately or scheduled for a later time.\n\n**Notification Status Options:**\n- `Draft`: Notification created but not yet ready for delivery\n- `Processing`: Notification will be sent immediately upon creation\n- `Scheduled`: Notification will be sent at the specified scheduled time\n\n**Scheduling:**\n- For immediate delivery, use `Processing` status\n- For scheduled delivery, use `Scheduled` status with a `scheduledTime`\n- Scheduled notifications are processed every 15 minutes, so delivery may occur within 15 minutes of the scheduled time\n",
        "operationId": "createPassNotification",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          }
        ],
        "requestBody": {
          "description": "Notification creation data including pass reference, message content, and scheduling options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PassNotification"
              },
              "examples": {
                "Create Notification Request": {
                  "summary": "Example wallet pass notification creation request for immediate delivery",
                  "description": "Create Notification Request",
                  "value": {
                    "passSerialNumber": "1f09804f-d6c7-66ec-8db2-27a5651e1de2",
                    "notificationName": "VIP Member Update",
                    "notificationMessage": "Your VIP membership benefits have been updated! Check out the new exclusive offers.",
                    "status": "Processing"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Notification created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PassNotification"
                },
                "examples": {
                  "Created Notification Response": {
                    "summary": "Successfully created wallet pass notification",
                    "description": "Created Notification Response",
                    "value": {
                      "id": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                      "createdTime": "2025-09-04T21:09:36.027Z",
                      "updatedTime": "2025-09-04T21:09:36.027Z",
                      "createdBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "updatedBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "workspaceId": "1f089d29-6f9c-66c2-af59-99631cec7ab5",
                      "accountId": "1f089d29-6fa8-6a13-af59-99631cec7ab5",
                      "passSerialNumber": "1f09804f-d6c7-66ec-8db2-27a5651e1de2",
                      "notificationName": "VIP Member Update",
                      "notificationMessage": "Your VIP membership benefits have been updated! Check out the new exclusive offers.",
                      "status": "Draft",
                      "scheduledTime": null,
                      "sentTime": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Invalid input validation error",
                    "description": "Bad Request Error",
                    "value": {
                      "txId": "1f098faa-8f33-6425-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:59",
                      "errorCode": "INVALID_INPUT",
                      "context": {
                        "notificationName": "must not be null",
                        "notificationMessage": "must not be empty"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallet-pass-location": {
      "get": {
        "tags": [
          "Passport - Locations"
        ],
        "summary": "Search and filter Wallet Pass Locations",
        "description": "Search and retrieve Wallet Pass Locations with optional filtering and pagination.\n\n**Features:**\n- Search locations by name using keyword query (case-insensitive)\n- Filter by specific location ID or name\n- Filter by wallet pass serial numbers\n- Pagination support with cursor-based navigation\n\n**Pagination:**\n- Use `cursor` parameter for next page navigation\n- `limit` controls page size (default: 20, max: 20)\n- Response includes `items` array, `cursor`, and `hasMore` fields\n",
        "operationId": "getPassLocations",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          },
          {
            "name": "query",
            "in": "query",
            "description": "Search keyword to filter locations by name (case-insensitive)",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 255
            },
            "example": "TORONTO MALL"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Exact search by location name (case-sensitive)",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 255
            },
            "example": "TORONTO MALL LOCATION"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor for fetching the next set of results. Use the 'cursor' value from the previous response.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of locations to return per page (1-20, max 20)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1
            },
            "example": 20
          },
          {
            "name": "passSerialNumbers",
            "in": "query",
            "description": "Filter locations by wallet pass serial numbers. Multiple values allowed.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9-_]+$"
              }
            },
            "example": "1f07ee39-d750-6276-aff4-07a599527878,1f07ee39-d750-6276-aff4-07a599527879"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Filter by specific location ID",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved wallet pass locations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BXPagedList"
                },
                "examples": {
                  "Success Response": {
                    "summary": "Paginated list of wallet pass locations",
                    "description": "Success Response",
                    "value": {
                      "items": [
                        {
                          "id": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                          "createdTime": "2025-09-04T21:09:36.027Z",
                          "updatedTime": "2025-09-04T21:11:01.734Z",
                          "createdBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                          "updatedBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                          "workspaceId": "1f089d29-6f9c-66c2-af59-99631cec7ab5",
                          "accountId": "1f089d29-6fa8-6a13-af59-99631cec7ab5",
                          "name": "TORONTO MALL LOCATION",
                          "enabled": true,
                          "latitude": 43.798327702071944,
                          "longitude": -79.24175240232819,
                          "relevantText": "Welcome to Toronto Premium Outlets",
                          "walletPass": {
                            "id": "1f07ee39-d750-6276-aff4-07a599527878"
                          }
                        }
                      ],
                      "cursor": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                      "hasMore": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Passport - Locations"
        ],
        "summary": "Create a wallet pass location",
        "description": "Create a new location for a specific wallet pass.\n",
        "operationId": "createPassLocation",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          }
        ],
        "requestBody": {
          "description": "Wallet pass location creation data including name, coordinates, and wallet pass reference",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PassLocation"
              },
              "examples": {
                "Create Location Request": {
                  "summary": "Example wallet pass location creation request",
                  "description": "Create Location Request",
                  "value": {
                    "name": "TORONTO MALL LOCATION",
                    "enabled": true,
                    "latitude": 43.798327702071944,
                    "longitude": -79.24175240232819,
                    "relevantText": "Welcome to Toronto Premium Outlets",
                    "walletPass": {
                      "id": "1f07ee39-d750-6276-aff4-07a599527878"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Wallet pass location created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PassLocation"
                },
                "examples": {
                  "Created Location Response": {
                    "summary": "Successfully created wallet pass location",
                    "description": "Created Location Response",
                    "value": {
                      "id": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                      "createdTime": "2025-09-04T21:09:36.027Z",
                      "updatedTime": "2025-09-04T21:09:36.027Z",
                      "createdBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "updatedBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "workspaceId": "1f089d29-6f9c-66c2-af59-99631cec7ab5",
                      "accountId": "1f089d29-6fa8-6a13-af59-99631cec7ab5",
                      "name": "TORONTO MALL LOCATION",
                      "enabled": true,
                      "latitude": 43.798327702071944,
                      "longitude": -79.24175240232819,
                      "relevantText": "Welcome to Toronto Premium Outlets",
                      "walletPass": {
                        "id": "1f07ee39-d750-6276-aff4-07a599527878"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Invalid input validation error",
                    "description": "Bad Request Error",
                    "value": {
                      "txId": "1f098faa-8f33-6425-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:59",
                      "errorCode": "INVALID_INPUT",
                      "context": {
                        "name": "must not be null"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Wallet pass not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Not Found Error": {
                    "summary": "Wallet pass not found",
                    "description": "Not Found Error",
                    "value": {
                      "txId": "1f098fa9-3786-64d4-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:23",
                      "errorCode": "NOT_FOUND",
                      "errorMessage": "Not found.",
                      "context": {
                        "id": "1f083424-11ed-617f-9513-1b26dc975ee2"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/uploads": {
      "post": {
        "tags": [
          "Upload APIs"
        ],
        "summary": "Upload a file to the server",
        "description": "Upload a file to the server by providing the file data as a form-data parameter",
        "operationId": "uploadFile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "File to upload"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully, key returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/uploads/s3": {
      "post": {
        "tags": [
          "Upload APIs"
        ],
        "summary": "Upload a file to S3",
        "description": "Upload a file to S3 by providing the file data as a form-data parameter and the bucket name",
        "operationId": "uploadFileToS3",
        "parameters": [
          {
            "name": "bucket",
            "in": "query",
            "description": "Bucket name to upload the file to",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "File to upload"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File uploaded successfully, path returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/uploads/finalize/s3-copy": {
      "post": {
        "tags": [
          "Upload APIs"
        ],
        "summary": "Finalize the S3 copy operation",
        "description": "Finalize the S3 copy operation using the key and extension of the object",
        "operationId": "finalizeCloudCopy",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "Key of the object",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extn",
            "in": "query",
            "description": "Extension of the object",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "S3 object finalized successfully, URL returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/pique-campaign": {
      "get": {
        "tags": [
          "Pique"
        ],
        "summary": "Search and filter Pique Campaigns",
        "description": "Search and retrieve Pique Campaigns with optional filtering and pagination.\n\n**Features:**\n- Search campaigns by name using keyword query\n- Filter by campaign status (Prepping, InProgress, Completed, Paused, NotStarted, Cancelled)\n- Filter by campaign type (BoostedPost, SyndicatedContent)\n- Pagination support with cursor-based navigation\n- Returns only published campaigns for branded users\n\n**Pagination:**\n- Use `cursor` parameter for next page navigation\n- `limit` controls page size (default: 20)\n- Response includes `items` array, `cursor`, and `hasMore` fields\n",
        "operationId": "searchPiqueCampaign",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search keyword to filter campaigns by name (case-insensitive)",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 255
            },
            "example": "summer collection"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor for fetching the next set of results. Use the 'cursor' value from the previous response.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of campaigns to return per page (1-20, max 20)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1
            },
            "example": 20
          },
          {
            "name": "statusList",
            "in": "query",
            "description": "Filter campaigns by status. Multiple values allowed.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Prepping",
                  "InProgress",
                  "Completed",
                  "Paused",
                  "NotStarted",
                  "Cancelled"
                ]
              }
            },
            "example": "InProgress,Completed"
          },
          {
            "name": "typeList",
            "in": "query",
            "description": "Filter campaigns by type. Multiple values allowed.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "BoostedPost",
                  "SyndicatedContent"
                ]
              }
            },
            "example": "SocialPush,BrandDiscovery"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Filter by specific campaign ID",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          },
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved campaigns",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BXPagedList"
                },
                "examples": {
                  "Success Response": {
                    "summary": "Paginated list of campaigns",
                    "description": "Success Response",
                    "value": {
                      "items": [
                        {
                          "id": "1f0aeeff-c45d-64e6-a63e-e1179780e82f",
                          "createdTime": "2025-10-22T02:37:00.169Z",
                          "updatedTime": "2025-10-22T02:59:23.866Z",
                          "createdBy": "1efe824d-1c2a-63b4-81ed-eb91480f4c4e",
                          "updatedBy": "1efe824d-1c2a-63b4-81ed-eb91480f4c4e",
                          "workspaceId": "1f08a693-3d4b-6d6d-8b30-81ed80c53926",
                          "accountId": "1f08a693-3d55-69ae-8b30-81ed80c53926",
                          "name": "BoostedPost Campaign 1761100620",
                          "type": "BoostedPost",
                          "status": "NotStarted",
                          "startDate": "2025-12-01",
                          "isPublished": false,
                          "campaignData": {},
                          "videoPerformanceFileInfo": {
                            "fileName": "campaign-videos.csv",
                            "url": "http://localhost:9012/bx-wallet-passes-setup-dev/pique-campaigns/1f0aeeff-c45d-64e6-a63e-e1179780e82f/campaign-videos.csv?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20251022T232937Z&X-Amz-SignedHeaders=host&X-Amz-Expires=60&X-Amz-Credential=minioadmin%2F20251022%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=e05a5cae5730062d61c24caaf688923a6aeaacd4a899bcd7705f353ed8c0e097"
                          },
                          "platforms": [
                            "Instagram",
                            "TikTok"
                          ],
                          "targetViews": 100000,
                          "beforeViews": 50000,
                          "afterViews": 450000,
                          "deliveredViews": 2000,
                          "contentLink": "https://example.com/boosted-campaign-content",
                          "submissionNotes": "Boosted campaign test",
                          "beforeImage": {
                            "fileName": "beforeImage.png",
                            "url": "http://localhost:9012/bx-wallet-passes-setup-dev/pique-campaigns/1f0aeeff-c45d-64e6-a63e-e1179780e82f/beforeImage.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20251022T232937Z&X-Amz-SignedHeaders=host&X-Amz-Expires=59&X-Amz-Credential=minioadmin%2F20251022%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=45d22790c4d31620e60783bb4c3b6c87ffdc6cbb8d61705832e32a0ee772ed22"
                          },
                          "afterImage": {
                            "fileName": "afterImage.png",
                            "url": "http://localhost:9012/bx-wallet-passes-setup-dev/pique-campaigns/1f0aeeff-c45d-64e6-a63e-e1179780e82f/afterImage.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20251022T232937Z&X-Amz-SignedHeaders=host&X-Amz-Expires=60&X-Amz-Credential=minioadmin%2F20251022%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=b7336f06e64514acf03173497642438d786ee239cc0039f25eba41fd803f6eb6"
                          }
                        }
                      ],
                      "cursor": "1f0aeeff-c45d-64e6-a63e-e1179780e82f",
                      "hasMore": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildXAPIError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildXAPIError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Pique"
        ],
        "summary": "Create Pique Campaign",
        "description": "Create a new Pique Campaign with the provided details.\n",
        "operationId": "createPiqueCampaign",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          }
        ],
        "requestBody": {
          "description": "Request body for creating Pique Campaign",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PiqueCampaignUserFlowRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Campaign created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PiqueCampaign"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid campaign data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildXAPIError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildXAPIError"
                }
              }
            }
          }
        }
      }
    },
    "/wallet-pass/{id}": {
      "get": {
        "tags": [
          "Passport - Passes"
        ],
        "summary": "Get wallet pass",
        "description": "Get Wallet pass by id.\n",
        "operationId": "getById",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          },
          {
            "name": "id",
            "in": "path",
            "description": "wallet pass id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WalletPassInfo"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Wallet Pass not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Not Found Error": {
                    "summary": "Wallet Pass not found",
                    "description": "Not Found Error",
                    "value": {
                      "txId": "1f098fa9-3786-64d4-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:23",
                      "errorCode": "NOT_FOUND",
                      "errorMessage": "Not found.",
                      "context": {
                        "id": "1f083424-11ed-617f-9513-1b26dc975ee2"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Passport - Passes"
        ],
        "summary": "Update Wallet Pass",
        "description": "Update an existing wallet pass by ID. This will update both Apple and Google wallet passes.\n",
        "operationId": "updateWalletPass",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the wallet pass to update",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          }
        ],
        "requestBody": {
          "description": "Updated wallet pass data including metadata, fields, and asset references",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WalletPassInfo"
              },
              "examples": {
                "Update Pass Request": {
                  "summary": "Example wallet pass update request",
                  "description": "Update Pass Request",
                  "value": {
                    "notificationHeader": "BLUE PASS",
                    "passName": "VIP MEMBERSHIP PASS - UPDATED",
                    "passMetadata": {
                      "description": "Updated VIP membership pass with enhanced benefits",
                      "organizationName": "Premium Brands Inc",
                      "backgroundColor": "#4a32A8",
                      "displayTextColor": "#FFFFFF",
                      "topField": {
                        "key": "tabKey",
                        "label": "SEE OFFERS",
                        "value": "Tab (...)"
                      },
                      "secondaryFields": [
                        {
                          "key": "auxiliaryFieldKey",
                          "label": "Member Level",
                          "value": "VIP Platinum"
                        },
                        {
                          "key": "auxiliaryFieldKey2",
                          "label": "Expires",
                          "value": "Dec 31, 2026"
                        }
                      ],
                      "backFields": [
                        {
                          "key": "featured",
                          "label": "Featured",
                          "value": [
                            {
                              "link": "https://premiumbrands.com/",
                              "text": "Visit Our Website"
                            }
                          ]
                        },
                        {
                          "key": "connectWithUs",
                          "label": "Connect",
                          "value": [
                            {
                              "link": "https://x.com/premiumbrands/",
                              "text": "X"
                            },
                            {
                              "link": "https://www.instagram.com/premiumbrands/",
                              "text": "Instagram"
                            }
                          ],
                          "changeMessage": null
                        }
                      ],
                      "qrUrl": "https://premiumbrands.com/vip-benefits",
                      "qrText": "Scan for VIP benefits"
                    },
                    "uploadInfoList": [
                      {
                        "fileName": "icon.png",
                        "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789abc"
                      },
                      {
                        "fileName": "logo.png",
                        "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789def"
                      },
                      {
                        "fileName": "strip.png",
                        "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789ghi"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Wallet pass updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletPassInfo"
                },
                "examples": {
                  "Updated Pass Response": {
                    "summary": "Successfully updated wallet pass",
                    "description": "Updated Pass Response",
                    "value": {
                      "id": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                      "createdTime": "2025-09-04T21:09:36.027Z",
                      "updatedTime": "2025-09-04T21:15:42.123Z",
                      "createdBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "updatedBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "workspaceId": "1f089d29-6f9c-66c2-af59-99631cec7ab5",
                      "accountId": "1f089d29-6fa8-6a13-af59-99631cec7ab5",
                      "notificationHeader": "BLUE PASS",
                      "passName": "VIP MEMBERSHIP PASS - UPDATED",
                      "status": "Published",
                      "passMetadata": {
                        "description": "Updated VIP membership pass with enhanced benefits",
                        "organizationName": "Premium Brands Inc",
                        "backgroundColor": "#4a32A8",
                        "displayTextColor": "#FFFFFF",
                        "topField": {
                          "key": "tabKey",
                          "label": "SEE OFFERS",
                          "value": "Tab (...)"
                        },
                        "secondaryFields": [
                          {
                            "key": "auxiliaryFieldKey",
                            "label": "Member Level",
                            "value": "VIP Platinum"
                          },
                          {
                            "key": "auxiliaryFieldKey2",
                            "label": "Expires",
                            "value": "Dec 31, 2026"
                          }
                        ],
                        "qrUrl": "https://premiumbrands.com/vip-benefits",
                        "qrText": "Scan for VIP benefits"
                      },
                      "uploadInfoList": [
                        {
                          "fileName": "icon.png",
                          "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789abc"
                        },
                        {
                          "fileName": "logo.png",
                          "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789def"
                        },
                        {
                          "fileName": "strip.png",
                          "uploadKey": "1f089d37-8a1b-4c2d-9e3f-123456789ghi"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Invalid input validation error",
                    "description": "Bad Request Error",
                    "value": {
                      "txId": "1f098faa-8f33-6425-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:59",
                      "errorCode": "INVALID_INPUT",
                      "context": {
                        "passName": "must not be null"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Pass ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Not Found Error": {
                    "summary": "Pass not found",
                    "description": "Not Found Error",
                    "value": {
                      "txId": "1f098fa9-3786-64d4-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:23",
                      "errorCode": "NOT_FOUND",
                      "errorMessage": "Not found.",
                      "context": {
                        "id": "1f083424-11ed-617f-9513-1b26dc975ee2"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallet-pass/notifications/{id}": {
      "get": {
        "tags": [
          "Passport - Push Notifications"
        ],
        "summary": "Get wallet pass notification by ID",
        "description": "Retrieve a specific wallet pass notification by its unique identifier.\nOptionally include notification statistics and click tracking data.\n",
        "operationId": "getPassNotification",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the notification to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          },
          {
            "name": "notificationStatsCursor",
            "in": "query",
            "description": "Pagination cursor for fetching the next set of notification statistics records. Use the 'cursor' value from the previous response.",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          },
          {
            "name": "notificationStatsLimit",
            "in": "query",
            "description": "Number of notification statistics records to return per page (1-20, max 20)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1
            },
            "example": 20
          },
          {
            "name": "includeStats",
            "in": "query",
            "description": "Include notification statistics and click tracking data",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "example": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved wallet pass notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PassNotification"
                },
                "examples": {
                  "Success Response": {
                    "summary": "Wallet pass notification details",
                    "description": "Success Response",
                    "value": {
                      "id": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                      "createdTime": "2025-09-04T21:09:36.027Z",
                      "updatedTime": "2025-09-04T21:11:01.734Z",
                      "createdBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "updatedBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "workspaceId": "1f089d29-6f9c-66c2-af59-99631cec7ab5",
                      "accountId": "1f089d29-6fa8-6a13-af59-99631cec7ab5",
                      "passSerialNumber": "1f09804f-d6c7-66ec-8db2-27a5651e1de2",
                      "notificationName": "VIP Member Update",
                      "notificationMessage": "Your VIP membership benefits have been updated! Check out the new exclusive offers.",
                      "status": "Published",
                      "scheduledTime": "2025-09-04T10:00:00.000Z",
                      "sentTime": "2025-09-04T10:00:15.123Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Notification ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Not Found Error": {
                    "summary": "Notification not found",
                    "description": "Not Found Error",
                    "value": {
                      "txId": "1f098fa9-3786-64d4-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:23",
                      "errorCode": "NOT_FOUND",
                      "errorMessage": "Not found.",
                      "context": {
                        "id": "1f083424-11ed-617f-9513-1b26dc975ee2"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Passport - Push Notifications"
        ],
        "summary": "Delete wallet pass notification",
        "description": "Delete wallet pass notification by ID. Only Draft or Scheduled notifications can be deleted.\n\n**Deletion Rules:**\n- `Draft` notifications can always be deleted\n- `Scheduled` notifications can be deleted before they are processed\n- `Processing`, `Published`, or `Failed` notifications cannot be deleted\n",
        "operationId": "deletePassNotification",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the notification to delete",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          }
        ],
        "responses": {
          "204": {
            "description": "Notification deleted successfully"
          },
          "400": {
            "description": "Bad Request - Invalid input or notification cannot be deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Notification cannot be deleted",
                    "description": "Bad Request Error",
                    "value": {
                      "txId": "1f098faa-8f33-6425-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:59",
                      "errorCode": "INVALID_OPERATION",
                      "errorMessage": "Cannot delete notification with status 'Published'",
                      "context": {
                        "id": "1f083424-11ed-617f-9513-1b26dc975ee2",
                        "status": "Published"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Notification ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Not Found Error": {
                    "summary": "Notification not found",
                    "description": "Not Found Error",
                    "value": {
                      "txId": "1f098fa9-3786-64d4-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:23",
                      "errorCode": "NOT_FOUND",
                      "errorMessage": "Not found.",
                      "context": {
                        "id": "1f083424-11ed-617f-9513-1b26dc975ee2"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Passport - Push Notifications"
        ],
        "summary": "Update wallet pass notification",
        "description": "Update wallet pass notification. Only Draft or Scheduled notifications can be updated.\n\n**Status Changes:**\n- Change from `Draft` to `Processing` for immediate delivery\n- Change from `Draft` to `Scheduled` for future delivery\n- Update `Scheduled` notifications to change delivery time or content\n\n**Scheduling Notes:**\n- Scheduled notifications are processed every 15 minutes\n- Delivery may occur within 15 minutes of the scheduled time\n- Once a notification is `Processing` or `Published`, it cannot be updated\n",
        "operationId": "updatePassNotification",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the notification to update",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          }
        ],
        "requestBody": {
          "description": "Updated notification data including message content and scheduling options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PassNotification"
              },
              "examples": {
                "Update Notification Request": {
                  "summary": "Example wallet pass notification update request",
                  "description": "Update Notification Request",
                  "value": {
                    "notificationName": "VIP Member Update - Enhanced",
                    "notificationMessage": "Your VIP membership benefits have been updated with new exclusive offers! Don't miss out on the latest deals.",
                    "status": "Scheduled",
                    "scheduledTime": "2025-09-05T10:00:00.000Z"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Notification updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PassNotification"
                },
                "examples": {
                  "Updated Notification Response": {
                    "summary": "Successfully updated wallet pass notification",
                    "description": "Updated Notification Response",
                    "value": {
                      "id": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                      "createdTime": "2025-09-04T21:09:36.027Z",
                      "updatedTime": "2025-09-04T21:15:42.123Z",
                      "createdBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "updatedBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                      "workspaceId": "1f089d29-6f9c-66c2-af59-99631cec7ab5",
                      "accountId": "1f089d29-6fa8-6a13-af59-99631cec7ab5",
                      "passSerialNumber": "1f09804f-d6c7-66ec-8db2-27a5651e1de2",
                      "notificationName": "VIP Member Update - Enhanced",
                      "notificationMessage": "Your VIP membership benefits have been updated with new exclusive offers! Don't miss out on the latest deals.",
                      "status": "Scheduled",
                      "scheduledTime": "2025-09-05T10:00:00.000Z",
                      "sentTime": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Bad Request Error": {
                    "summary": "Invalid input validation error",
                    "description": "Bad Request Error",
                    "value": {
                      "txId": "1f098faa-8f33-6425-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:59",
                      "errorCode": "INVALID_INPUT",
                      "context": {
                        "notificationMessage": "must not be empty"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Notification ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Not Found Error": {
                    "summary": "Notification not found",
                    "description": "Not Found Error",
                    "value": {
                      "txId": "1f098fa9-3786-64d4-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:23",
                      "errorCode": "NOT_FOUND",
                      "errorMessage": "Not found.",
                      "context": {
                        "id": "1f083424-11ed-617f-9513-1b26dc975ee2"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pique-campaign/{id}": {
      "get": {
        "tags": [
          "Pique"
        ],
        "summary": "Get Pique Campaign by ID",
        "description": "Retrieve a specific Pique Campaign by its unique identifier.\n",
        "operationId": "getPiqueCampaign",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the Pique Campaign",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          },
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign found and returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PiqueCampaign"
                },
                "examples": {
                  "Campaign Response": {
                    "summary": "Complete campaign details",
                    "description": "Campaign Response",
                    "value": {
                      "id": "1f0aeeff-c45d-64e6-a63e-e1179780e82f",
                      "createdTime": "2025-10-22T02:37:00.169Z",
                      "updatedTime": "2025-10-22T02:59:23.866Z",
                      "createdBy": "1efe824d-1c2a-63b4-81ed-eb91480f4c4e",
                      "updatedBy": "1efe824d-1c2a-63b4-81ed-eb91480f4c4e",
                      "workspaceId": "1f08a693-3d4b-6d6d-8b30-81ed80c53926",
                      "accountId": "1f08a693-3d55-69ae-8b30-81ed80c53926",
                      "name": "BoostedPost Campaign 1761100620",
                      "type": "BoostedPost",
                      "status": "NotStarted",
                      "startDate": "2025-12-01",
                      "isPublished": false,
                      "campaignData": {},
                      "videoPerformanceFileInfo": {
                        "fileName": "campaign-videos.csv",
                        "url": "http://localhost:9012/bx-wallet-passes-setup-dev/pique-campaigns/1f0aeeff-c45d-64e6-a63e-e1179780e82f/campaign-videos.csv?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20251022T232937Z&X-Amz-SignedHeaders=host&X-Amz-Expires=60&X-Amz-Credential=minioadmin%2F20251022%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=e05a5cae5730062d61c24caaf688923a6aeaacd4a899bcd7705f353ed8c0e097"
                      },
                      "platforms": [
                        "Instagram",
                        "TikTok"
                      ],
                      "targetViews": 100000,
                      "beforeViews": 50000,
                      "afterViews": 450000,
                      "deliveredViews": 2000,
                      "contentLink": "https://example.com/boosted-campaign-content",
                      "submissionNotes": "Boosted campaign test",
                      "beforeImage": {
                        "fileName": "beforeImage.png",
                        "url": "http://localhost:9012/bx-wallet-passes-setup-dev/pique-campaigns/1f0aeeff-c45d-64e6-a63e-e1179780e82f/beforeImage.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20251022T232937Z&X-Amz-SignedHeaders=host&X-Amz-Expires=59&X-Amz-Credential=minioadmin%2F20251022%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=45d22790c4d31620e60783bb4c3b6c87ffdc6cbb8d61705832e32a0ee772ed22"
                      },
                      "afterImage": {
                        "fileName": "afterImage.png",
                        "url": "http://localhost:9012/bx-wallet-passes-setup-dev/pique-campaigns/1f0aeeff-c45d-64e6-a63e-e1179780e82f/afterImage.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20251022T232937Z&X-Amz-SignedHeaders=host&X-Amz-Expires=60&X-Amz-Credential=minioadmin%2F20251022%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=b7336f06e64514acf03173497642438d786ee239cc0039f25eba41fd803f6eb6"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign not found or not accessible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildXAPIError"
                },
                "examples": {
                  "Not Found Error": {
                    "summary": "Campaign not found",
                    "description": "Not Found Error",
                    "value": {
                      "txId": "Root=1-68d30006-614205915f11c2e02dc1dcd3",
                      "timestamp": "23-09-2025 08:16:06",
                      "errorCode": "NOT_FOUND",
                      "errorMessage": "Not found.",
                      "context": {
                        "id": "1f061c3e-ed45-60e0-884d-85e4657e9d601"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildXAPIError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Pique"
        ],
        "summary": "Update Pique Campaign",
        "description": "Update an existing Pique Campaign with the provided details.\n",
        "operationId": "updatePiqueCampaign",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the Pique Campaign",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          },
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          }
        ],
        "requestBody": {
          "description": "Request body for updating Pique Campaign",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PiqueCampaignUserFlowRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Campaign updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PiqueCampaign"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid campaign data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildXAPIError"
                }
              }
            }
          },
          "404": {
            "description": "Campaign not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildXAPIError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildXAPIError"
                }
              }
            }
          }
        }
      }
    },
    "/wallet-pass/notifications/{id}/stats": {
      "get": {
        "tags": [
          "Passport - Push Notifications"
        ],
        "summary": "Get notification statistics",
        "description": "Retrieve detailed statistics for a specific wallet pass notification including delivery metrics,\nclick tracking, and engagement data.\n\n**Statistics Include:**\n- Delivery status and timestamps\n- Click-through rates for notification links\n- User engagement metrics\n- Error tracking and failure reasons\n\n**Pagination:**\n- Use `cursor` parameter for next page navigation\n- `limit` controls page size (default: 20, max: 20)\n",
        "operationId": "getPassNotificationStats",
        "parameters": [
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the notification to get statistics for",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor for fetching the next set of statistics records",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of statistics records to return per page (1-20, max 20)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1
            },
            "example": 20
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved notification statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStats"
                },
                "examples": {
                  "Success Response": {
                    "summary": "Notification statistics data",
                    "description": "Success Response",
                    "value": {
                      "notificationId": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                      "totalSent": 150,
                      "totalDelivered": 148,
                      "totalFailed": 2,
                      "totalClicks": 45,
                      "clickThroughRate": 30.4,
                      "deliveryRate": 98.7,
                      "lastUpdated": "2025-09-04T21:15:42.123Z",
                      "linkStats": [
                        {
                          "linkId": "1f089d37-8a1b-4c2d-9e3f-123456789abc",
                          "linkUrl": "https://premiumbrands.com/vip-benefits",
                          "clickCount": 32,
                          "uniqueClicks": 28,
                          "lastClicked": "2025-09-04T20:45:30.456Z"
                        },
                        {
                          "linkId": "1f089d37-8a1b-4c2d-9e3f-123456789def",
                          "linkUrl": "https://premiumbrands.com/offers",
                          "clickCount": 13,
                          "uniqueClicks": 12,
                          "lastClicked": "2025-09-04T19:22:15.789Z"
                        }
                      ],
                      "deliveryStats": {
                        "delivered": 148,
                        "failed": 2,
                        "pending": 0,
                        "failedReasons": [
                          {
                            "reason": "Invalid device token",
                            "count": 2
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Notification ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Not Found Error": {
                    "summary": "Notification not found",
                    "description": "Not Found Error",
                    "value": {
                      "txId": "1f098fa9-3786-64d4-b4ff-533200846d35",
                      "timestamp": "24-09-2025 03:57:23",
                      "errorCode": "NOT_FOUND",
                      "errorMessage": "Not found.",
                      "context": {
                        "id": "1f083424-11ed-617f-9513-1b26dc975ee2"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockedApiError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/uploads/s3-url": {
      "get": {
        "tags": [
          "Upload APIs"
        ],
        "summary": "Get a pre-signed URL to upload a file to S3",
        "description": "Get a pre-signed URL to upload a file to S3",
        "operationId": "getPresignedUrlToUpload",
        "responses": {
          "200": {
            "description": "Pre-signed URL generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignedURLResponse"
                }
              }
            }
          }
        }
      }
    },
    "/pique-campaign/{id}/video-performance": {
      "get": {
        "tags": [
          "Pique"
        ],
        "summary": "Get Pique Campaign video performance data",
        "description": "Retrieve video performance metrics for a specific Pique Campaign.\n",
        "operationId": "getPiqueCampaignVideoPerformance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier of the Pique Campaign",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d37-5ebe-6778-af59-99631cec7ab5"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor for fetching the next set of performance records. Use the 'cursor' value from the previous response.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "1f089d37-6145-6709-af59-99631cec7ab6"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of performance records to return per page (1-20, max 20)",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1
            },
            "example": 20
          },
          {
            "name": "x-workspace-id",
            "in": "header",
            "description": "Workspace ID to perform the operation in. If not provided, system will use the first one assigned to the user",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9-_]+$"
            },
            "example": "1f089d29-6f9c-66c2-af59-99631cec7ab5"
          }
        ],
        "responses": {
          "200": {
            "description": "Video performance data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BXPagedList"
                },
                "examples": {
                  "Performance Data Response": {
                    "summary": "Paginated video performance metrics",
                    "description": "Performance Data Response",
                    "value": {
                      "items": [
                        {
                          "id": "1f089d37-6145-6709-af59-99631cec7ab5",
                          "createdTime": "2025-09-04T21:09:36.063Z",
                          "updatedTime": "2025-09-04T21:09:36.063Z",
                          "createdBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                          "updatedBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                          "workspaceId": "1f089d29-6f9c-66c2-af59-99631cec7ab5",
                          "campaignId": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                          "platform": "TikTok",
                          "videoURL": "https://tiktok.com/@creator/video/123",
                          "creatorHandle": "@fashioncreator",
                          "views": 150000,
                          "likes": 12000,
                          "shares": 800,
                          "comments": 450,
                          "saves": 2100,
                          "datePosted": "2024-01-15"
                        },
                        {
                          "id": "1f089d37-6145-6709-af59-99631cec7ab6",
                          "createdTime": "2025-09-04T21:09:36.063Z",
                          "updatedTime": "2025-09-04T21:09:36.063Z",
                          "createdBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                          "updatedBy": "1ef58ae6-40ac-6fd2-96af-45801844c4e2",
                          "workspaceId": "1f089d29-6f9c-66c2-af59-99631cec7ab5",
                          "campaignId": "1f089d37-5ebe-6778-af59-99631cec7ab5",
                          "platform": "Instagram",
                          "videoURL": "https://instagram.com/p/ABC123",
                          "creatorHandle": "@lifestyleblogger",
                          "views": 85000,
                          "likes": 6500,
                          "shares": 320,
                          "comments": 180,
                          "saves": 1200,
                          "datePosted": "2024-01-16"
                        }
                      ],
                      "cursor": "1f089d37-6145-6709-af59-99631cec7ab6",
                      "hasMore": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign not found or no performance data available",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildXAPIError"
                },
                "examples": {
                  "Not Found Error": {
                    "summary": "Campaign or performance data not found",
                    "description": "Not Found Error",
                    "value": {
                      "txId": "Root=1-68d30006-614205915f11c2e02dc1dcd3",
                      "timestamp": "23-09-2025 08:16:06",
                      "errorCode": "NOT_FOUND",
                      "errorMessage": "Not found.",
                      "context": {
                        "id": "1f061c3e-ed45-60e0-884d-85e4657e9d601"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildXAPIError"
                },
                "examples": {
                  "Unauthorized Error": {
                    "summary": "Authentication failed",
                    "description": "Unauthorized Error",
                    "value": {
                      "txId": "Root=1-68d3693c-26a3db2278c7668f5e086711",
                      "timestamp": "24-09-2025 03:45:00",
                      "errorCode": "UNAUTHORIZED",
                      "errorMessage": "UNAUTHORIZED."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BuildXAPIError": {
        "type": "object",
        "properties": {
          "txId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "context": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "PassLocation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was created in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was last updated in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the entity."
          },
          "updatedBy": {
            "type": "string",
            "description": "The user who last updated the entity."
          },
          "workspaceId": {
            "type": "string",
            "description": "The ID of the workspace to which this entity belongs."
          },
          "name": {
            "type": "string",
            "description": "Name of the location. This field is required and has a maximum length of 255 characters.",
            "example": "Main Store",
            "maxLength": 255,
            "minLength": 0
          },
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether the location is enabled. If true, the pass may trigger a notification when the user is near this location. Default is true if not specified.",
            "example": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "Latitude of the location in degrees. This field is required.",
            "example": 37.7749
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "Longitude of the location in degrees. This field is required.",
            "example": -122.4194
          },
          "altitude": {
            "type": "number",
            "format": "double",
            "description": "Altitude of the location in meters. Optional.",
            "example": 10.5
          },
          "relevantText": {
            "type": "string",
            "description": "Text to display on the lock screen when the user is near this location. This field is required and has a maximum length of 255 characters.",
            "example": "You are near Main Store!",
            "maxLength": 255,
            "minLength": 0
          }
        },
        "required": [
          "latitude",
          "longitude",
          "name",
          "relevantText"
        ]
      },
      "UnblockedApiError": {
        "type": "object",
        "properties": {
          "txId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "context": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was created in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was last updated in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the entity."
          },
          "updatedBy": {
            "type": "string",
            "description": "The user who last updated the entity."
          },
          "workspaceId": {
            "type": "string",
            "description": "The ID of the workspace to which this entity belongs."
          },
          "name": {
            "type": "string",
            "description": "Account name"
          },
          "clientContact": {
            "type": "string",
            "description": "Client contact"
          },
          "clientContactDetails": {
            "type": "string",
            "description": "Client contact details"
          }
        }
      },
      "AppDeepLinks": {
        "type": "object",
        "properties": {
          "appleDeepLinkData": {
            "$ref": "#/components/schemas/AppleDeepLinkData"
          },
          "googleDeepLinkData": {
            "$ref": "#/components/schemas/GoogleDeepLinkData"
          }
        }
      },
      "AppleDeepLinkData": {
        "type": "object",
        "properties": {
          "appStoreId": {
            "type": "string"
          },
          "launchUrl": {
            "type": "string"
          }
        }
      },
      "BackPassField": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackPassFieldValue"
            }
          },
          "changeMessage": {
            "type": "string"
          }
        }
      },
      "BackPassFieldValue": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "shortLinkValue": {
            "type": "string"
          },
          "shortLinkId": {
            "type": "string"
          },
          "utmSource": {
            "type": "string"
          }
        }
      },
      "GoogleDeepLinkData": {
        "type": "object",
        "properties": {
          "androidPackageName": {
            "type": "string"
          },
          "webAppUrl": {
            "type": "string"
          },
          "displayText": {
            "type": "string"
          }
        }
      },
      "PassField": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "changeMessage": {
            "type": "string"
          }
        }
      },
      "PassMetadata": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Pass description. Apple: Displayed on the back of the pass, providing additional details. Google: Used as the main description of the pass, visible in the pass details."
          },
          "organizationName": {
            "type": "string",
            "description": "Organization name. Apple: Displayed on the lock screen and in the Wallet app, identifying the issuer. Google: Displayed at the top of the pass, identifying the issuer."
          },
          "backgroundColor": {
            "type": "string",
            "description": "Background color of the pass."
          },
          "displayTextColor": {
            "type": "string",
            "description": "Text color of the pass."
          },
          "topField": {
            "$ref": "#/components/schemas/PassField",
            "description": "Top field. Apple: It appears at the right top of the pass.  Google: Top field appears below the pass description."
          },
          "secondaryFields": {
            "type": "array",
            "description": "Secondary fields.",
            "items": {
              "$ref": "#/components/schemas/PassField"
            }
          },
          "backFields": {
            "type": "array",
            "description": "Back fields.",
            "items": {
              "$ref": "#/components/schemas/BackPassField"
            }
          },
          "qrUrl": {
            "type": "string",
            "description": "URL or text for the QR code."
          },
          "qrText": {
            "type": "string",
            "description": "QR text. It appears below the QR code."
          },
          "locations": {
            "type": "array",
            "description": "Locations. Apple: Defines geographic locations where the pass is relevant. The pass can appear on the lock screen when the user is near one of these locations. Google: Not supported.",
            "items": {
              "$ref": "#/components/schemas/PassLocation"
            }
          },
          "appDeepLinks": {
            "$ref": "#/components/schemas/AppDeepLinks"
          },
          "userDeepLink": {
            "$ref": "#/components/schemas/UserDeepLink",
            "description": "User deep link configuration containing app type and input link"
          }
        }
      },
      "UploadInfo": {
        "type": "object",
        "properties": {
          "fileKey": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "UserDeepLink": {
        "type": "object",
        "properties": {
          "appType": {
            "type": "string",
            "description": "Type of application for the deep link",
            "enum": [
              "Website",
              "Mobile App",
              "Tiktok",
              "Instagram",
              "X",
              "Youtube",
              "Spotify"
            ]
          },
          "inputLink": {
            "type": "string",
            "description": "The input link URL for the deep link"
          },
          "appleAppStoreUrl": {
            "type": "string",
            "description": "Apple App Store URL (for Mobile App type)"
          },
          "launchUrl": {
            "type": "string",
            "description": "Launch URL (for Mobile App type)"
          },
          "googlePlayStoreUrl": {
            "type": "string",
            "description": "Google Play Store URL (for Mobile App type)"
          }
        }
      },
      "WalletPassInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was created in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was last updated in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the entity."
          },
          "updatedBy": {
            "type": "string",
            "description": "The user who last updated the entity."
          },
          "workspaceId": {
            "type": "string",
            "description": "Workspace the pass belongs to. "
          },
          "passName": {
            "type": "string",
            "description": "Name of the pass, the name has to be unique within the workspace.",
            "example": "My Wallet Pass"
          },
          "passMetadata": {
            "$ref": "#/components/schemas/PassMetadata",
            "description": "Pass metadata."
          },
          "uploadInfoList": {
            "type": "array",
            "description": "Wallet pass images. each pass has to have a logo, icon, and strip images in png format. footer.png is optional.",
            "items": {
              "$ref": "#/components/schemas/UploadInfo"
            }
          },
          "passLink": {
            "type": "string",
            "description": "The link where passes can be downloaded. This link will be generated after passes are created."
          },
          "notificationHeader": {
            "type": "string",
            "description": "This is used for Apple passes. The notification header is displayed on the lock screen when a notification is sent to the pass."
          },
          "account": {
            "$ref": "#/components/schemas/Account",
            "description": "Account which the pass belongs to. If it's not provided the system will automatically use the default account for the workspace."
          },
          "appleIssuedCount": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of users who have added this pass to their Apple Wallets"
          },
          "googleIssuedCount": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of users who have added this pass to their Google Wallets"
          },
          "totalIssuedCount": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of users who have added this pass to their wallets (Apple + Google)"
          },
          "appleActiveCount": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of users who have added this pass to their Apple Wallets and have not removed it"
          },
          "googleActiveCount": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of users who have added this pass to their Google Wallets and have not removed it"
          },
          "totalActiveCount": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of users who have added this pass to their wallets (Apple + Google) and have not removed it"
          },
          "passLinkSlug": {
            "type": "string",
            "description": "Slug to be used for the pass link. This is used to generate the pass link, if not provided the system will generate a random slug."
          },
          "googlePassLink": {
            "type": "string",
            "description": "Raw link to Google Pass. This link is provided by Google API."
          },
          "status": {
            "type": "string",
            "description": "Pass status",
            "enum": [
              "Draft",
              "Published"
            ],
            "example": "Draft, Published"
          }
        }
      },
      "BXPagedListWorkspaceTopLinkStats": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkspaceTopLinkStats"
            }
          },
          "cursor": {
            "type": "string"
          },
          "hasMore": {
            "type": "boolean"
          }
        }
      },
      "NotificationStats": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was created in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was last updated in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the entity."
          },
          "updatedBy": {
            "type": "string",
            "description": "The user who last updated the entity."
          },
          "workspaceId": {
            "type": "string",
            "description": "The ID of the workspace to which this entity belongs."
          },
          "totalNotificationsSent": {
            "type": "integer",
            "format": "int32"
          },
          "totalLinksClicks": {
            "type": "integer",
            "format": "int32"
          },
          "linkStats": {
            "$ref": "#/components/schemas/BXPagedListWorkspaceTopLinkStats"
          }
        }
      },
      "PassNotification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was created in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was last updated in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the entity."
          },
          "updatedBy": {
            "type": "string",
            "description": "The user who last updated the entity."
          },
          "workspaceId": {
            "type": "string",
            "description": "workspace id to which the notification belongs."
          },
          "passSerialNumber": {
            "type": "string",
            "description": "Wallet pass id to which the notification belongs."
          },
          "notificationName": {
            "type": "string",
            "description": "Notification name. This is will not appear on pass, it's used internally to identify the notification."
          },
          "notificationMessage": {
            "type": "string",
            "description": "Notification message. For Apple passes, this message will be displayed on the lock screen when a notification is sent to the pass. For Google passes, this message will be displayed at the back of the pass when a notification is sent to the pass."
          },
          "status": {
            "type": "string",
            "description": "Notification status: Draft: Notification will not be sent until the status is changed to Scheduled or ProcessingScheduled: Notification is scheduled to be sent at a specific time. Processing: Notification is being sent. Published: Notification has been sent.Failed: Notification failed to be sent. If the status is not specified at the time of creation, it will be sent immediately.",
            "enum": [
              "Draft",
              "Initializing",
              "Processing",
              "Finalizing",
              "Published",
              "Scheduled",
              "AppleFailedGoogleSuccess",
              "AppleSuccessGoogleFailed",
              "Failed"
            ]
          },
          "publishedTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the notification was sent in ISO 8601 format including milliseconds and timezone offset."
          },
          "scheduledTime": {
            "type": "string",
            "format": "date-time",
            "description": "Time when the notification will be sent in ISO 8601 format including milliseconds and timezone offset."
          },
          "appleNotificationSentCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of active users who have received this notification on their Apple Wallets."
          },
          "googleNotificationSentCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of active users who have received this notification on their Google Wallets."
          },
          "totalNotificationSentCount": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of active users who have received this notification on their wallets (Apple + Google)."
          },
          "notificationStats": {
            "$ref": "#/components/schemas/NotificationStats",
            "description": "stats for the notification, it contains the total number of notifications sent and link stats."
          }
        },
        "required": [
          "notificationName",
          "passSerialNumber"
        ]
      },
      "WorkspaceTopLinkStats": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was created in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was last updated in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the entity."
          },
          "updatedBy": {
            "type": "string",
            "description": "The user who last updated the entity."
          },
          "workspaceId": {
            "type": "string",
            "description": "The ID of the workspace to which this entity belongs."
          },
          "linkUrl": {
            "type": "string"
          },
          "totalClicks": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ResponseMessage": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string"
          }
        }
      },
      "BXPagedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {}
          },
          "cursor": {
            "type": "string"
          },
          "hasMore": {
            "type": "boolean"
          }
        }
      },
      "SignedURLResponse": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "PiqueCampaign": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was created in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was last updated in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the entity."
          },
          "updatedBy": {
            "type": "string",
            "description": "The user who last updated the entity."
          },
          "workspaceId": {
            "type": "string",
            "description": "The ID of the workspace to which this entity belongs."
          },
          "accountId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "BoostedPost",
              "SyndicatedContent"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "Prepping",
              "InProgress",
              "Completed",
              "Paused",
              "NotStarted",
              "Cancelled"
            ]
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "isPublished": {
            "type": "boolean"
          },
          "campaignData": {
            "$ref": "#/components/schemas/PiqueCampaignData"
          },
          "campaignDataFileInfo": {
            "$ref": "#/components/schemas/UploadInfo"
          },
          "videoPerformanceFileInfo": {
            "$ref": "#/components/schemas/UploadInfo"
          },
          "platforms": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetViews": {
            "type": "integer",
            "format": "int32"
          },
          "beforeViews": {
            "type": "integer",
            "format": "int32"
          },
          "afterViews": {
            "type": "integer",
            "format": "int32"
          },
          "deliveredViews": {
            "type": "integer",
            "format": "int32"
          },
          "contentLink": {
            "type": "string"
          },
          "submissionNotes": {
            "type": "string"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "beforeImage": {
            "$ref": "#/components/schemas/UploadInfo"
          },
          "afterImage": {
            "$ref": "#/components/schemas/UploadInfo"
          }
        }
      },
      "PiqueCampaignData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was created in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "updatedTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the entity was last updated in ISO 8601 format including milliseconds and timezone offset.",
            "example": "2025-05-13T15:07:15.036Z"
          },
          "createdBy": {
            "type": "string",
            "description": "The user who created the entity."
          },
          "updatedBy": {
            "type": "string",
            "description": "The user who last updated the entity."
          },
          "workspaceId": {
            "type": "string",
            "description": "The ID of the workspace to which this entity belongs."
          },
          "campaignId": {
            "type": "string"
          },
          "totalViews": {
            "type": "integer",
            "format": "int32"
          },
          "totalClicks": {
            "type": "integer",
            "format": "int32"
          },
          "totalLikes": {
            "type": "integer",
            "format": "int32"
          },
          "totalCreators": {
            "type": "integer",
            "format": "int32"
          },
          "totalComments": {
            "type": "integer",
            "format": "int32"
          },
          "totalShares": {
            "type": "integer",
            "format": "int32"
          },
          "totalVideos": {
            "type": "number",
            "format": "double"
          },
          "instagramViews": {
            "type": "integer",
            "format": "int32"
          },
          "instagramLikes": {
            "type": "integer",
            "format": "int32"
          },
          "instagramShares": {
            "type": "integer",
            "format": "int32"
          },
          "instagramComments": {
            "type": "integer",
            "format": "int32"
          },
          "tiktokViews": {
            "type": "integer",
            "format": "int32"
          },
          "tiktokLikes": {
            "type": "integer",
            "format": "int32"
          },
          "tiktokShares": {
            "type": "integer",
            "format": "int32"
          },
          "tiktokComments": {
            "type": "integer",
            "format": "int32"
          },
          "assetFolderLink": {
            "type": "string"
          },
          "rec1": {
            "type": "string"
          },
          "rec2": {
            "type": "string"
          },
          "rec3": {
            "type": "string"
          },
          "rec4": {
            "type": "string"
          }
        }
      },
      "PiqueCampaignUserFlowRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "BoostedPost",
              "SyndicatedContent"
            ]
          },
          "targetViews": {
            "type": "integer",
            "format": "int32"
          },
          "platforms": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deliveredViews": {
            "type": "integer",
            "format": "int32"
          },
          "contentLink": {
            "type": "string"
          },
          "submissionNotes": {
            "type": "string"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          }
        }
      }
    },
    "securitySchemes": {
      "APIKey": {
        "type": "apiKey",
        "description": "API Key authentication",
        "name": "api-key",
        "in": "header"
      }
    }
  }
}